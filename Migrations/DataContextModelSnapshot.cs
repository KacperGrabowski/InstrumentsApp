// <auto-generated />
using System;
using InstrumentsApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InstrumentsApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InstrumentsApp.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("InstrumentsApp.Models.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Instruments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "images/piano.jpg",
                            Name = "Piano",
                            Price = 1500.00m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "images/guitar.jpg",
                            Name = "Guitar",
                            Price = 500.00m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "images/violin.jpg",
                            Name = "Violin",
                            Price = 800.00m,
                            Stock = 7
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "images/drums.jpg",
                            Name = "Drums",
                            Price = 1200.00m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 5,
                            ImagePath = "images/electricGuitar.jpg",
                            Name = "Electric Guitar",
                            Price = 1000.00m,
                            Stock = 7
                        },
                        new
                        {
                            Id = 6,
                            ImagePath = "images/bassGuitar.jpg",
                            Name = "Bass Guitar",
                            Price = 900.00m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 7,
                            ImagePath = "images/keyboard.jpg",
                            Name = "Keyboard",
                            Price = 950.00m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 8,
                            ImagePath = "images/accordion.jpg",
                            Name = "Accordion",
                            Price = 600.00m,
                            Stock = 77
                        });
                });

            modelBuilder.Entity("InstrumentsApp.Models.ItemEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("OrderId");

                    b.ToTable("ItemEntry");
                });

            modelBuilder.Entity("InstrumentsApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("InstrumentsApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InstrumentsApp.Models.ItemEntry", b =>
                {
                    b.HasOne("InstrumentsApp.Models.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("InstrumentsApp.Models.Instrument", "Instrument")
                        .WithMany()
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InstrumentsApp.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.Navigation("Cart");

                    b.Navigation("Instrument");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("InstrumentsApp.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("InstrumentsApp.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
